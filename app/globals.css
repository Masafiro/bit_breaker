@import "tailwindcss";

:root {
  color-scheme: light;
  --background: hsl(0 0% 100%);
  --foreground: hsl(0 0% 3.9%); /* 文字色 (黒) */
  --card: hsl(0 0% 80%);       /* カード背景 (非常に薄いグレー) */
  --cord: hsl(0 0% 90%);
  --card-foreground: hsl(0 0% 3.9%); /* カード上の文字色 (黒) */
  --border: hsl(0 0% 70%);     /* 境界線 */
  --primary: #3b82f6;     /* 主要なボタンの色 (青) */
  --primary-foreground: #ffffff; /* ボタン上の文字色 (白) */
}

:root[color-scheme="dark"] {
    color-scheme: dark;
}

:root[color-scheme="light"] {
    color-scheme: light;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --background: hsl(0 0% 3.9%);
    --foreground: hsl(0 0% 98%); /* 文字色 (白) */
    --card: hsl(0 0% 20%);       /* カード背景 (濃いグレー) */
    --cord: hsl(0 0% 10%);
    --card-foreground:hsl(0 0% 98%); /* カード上の文字色 (白) */
    --border: hsl(0 0% 30%);     /* 境界線 */
    --primary: #60a5fa;     /* 主要なボタンの色 (明るい青) */
    --primary-foreground: #0a0a0a; /* ボタン上の文字色 (黒) */
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* globals.css */
.title {
  color: blue;
  font-size: 2rem;
  text-align: center;
}

.bitDisplayTarget {
  display: flex; /* 中央揃えのためにflexboxを使用 */
  justify-content: center; /* 水平方向に中央揃え */
  align-items: center; /* 垂直方向に中央揃え */
  font-size: 2.5rem; /* ビット列を見やすくするためのフォントサイズ */
  font-weight: bold; /* 太字にして強調 */
  color: light-dark(#333, #DDD); /* テキストの色 */
  border-radius: 8px; /* 角を丸くする */
  padding: 16px; /* 内側の余白 */
  width: 80%; /* コンテナの幅を調整 */
  margin: 0px auto -30px; /* 上下に余白を追加し、中央揃え */
  text-align: center; /* テキストを中央揃え */
}

.bitDisplayCurrent {
  display: flex; /* 中央揃えのためにflexboxを使用 */
  justify-content: center; /* 水平方向に中央揃え */
  align-items: center; /* 垂直方向に中央揃え */
  font-size: 5rem; /* ビット列を見やすくするためのフォントサイズ */
  font-weight: bold; /* 太字にして強調 */
  color: #333; /* テキストの色 */
  background-color: #DDDDDD; /* 背景色 */
  border: 2px solid #007bff; /* 枠線 */
  border-radius: 8px; /* 角を丸くする */
  padding: 2px; /* 内側の余白 */
  width: 80%; /* コンテナの幅を調整 */
  margin: 10px auto 30px; /* 上下に余白を追加し、中央揃え */
  text-align: center; /* テキストを中央揃え */
}

.bitDisplayCorrect {
  display: flex; /* 中央揃えのためにflexboxを使用 */
  justify-content: center; /* 水平方向に中央揃え */
  align-items: center; /* 垂直方向に中央揃え */
  font-size: 5rem; /* ビット列を見やすくするためのフォントサイズ */
  font-weight: bold; /* 太字にして強調 */
  color: #333; /* テキストの色 */
  background-color: #7ae3ec; /* 背景色 */
  border: 2px solid #007bff; /* 枠線 */
  border-radius: 8px; /* 角を丸くする */
  padding: 2px; /* 内側の余白 */
  width: 80%; /* コンテナの幅を調整 */
  margin: 10px auto 30px; /* 上下に余白を追加し、中央揃え */
  text-align: center; /* テキストを中央揃え */
}

.bitDisplayMinimum {
  display: flex; /* 中央揃えのためにflexboxを使用 */
  justify-content: center; /* 水平方向に中央揃え */
  align-items: center; /* 垂直方向に中央揃え */
  font-size: 5rem; /* ビット列を見やすくするためのフォントサイズ */
  font-weight: bold; /* 太字にして強調 */
  color: #333; /* テキストの色 */
  background-color: #f5e900; /* 背景色 */
  border: 2px solid #007bff; /* 枠線 */
  border-radius: 8px; /* 角を丸くする */
  padding: 2px; /* 内側の余白 */
  width: 80%; /* コンテナの幅を調整 */
  margin: 10px auto 30px; /* 上下に余白を追加し、中央揃え */
  text-align: center; /* テキストを中央揃え */
}

.bitOperationButtonContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}

.bitOperationButtonDisabled {
  padding: 12px 12px;
  background-color: #444444;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  width: 200px;
  font-size: 1.7rem
}

.bitOperationButtonEnabled {
  padding: 12px 12px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  width: 200px;
  font-size: 1.7rem
}

.bitOperationButton:hover {
  background-color: #0056b3;
}

.problemButtonContainer {
  display: grid;
  grid-template-columns: repeat(10, 50pt);
  justify-content: center;
  align-items: center;
  row-gap: -20px;

}

.timeAttackButtonContainer {
  display: grid;
  justify-content: center;
  align-items: center;
  justify-items: stretch;  
}

.problemButtonSolvedMinimum {
  width: 50px;
  height: 50px;
  margin: 10px;
  background-color: #f5e900;
  color: black;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 160%;
  font-weight: bold;
}

.problemButtonSolved {
  width: 50px;
  height: 50px;
  margin: 10px;
  background-color: #7ae3ec;
  color: black;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 160%;
  font-weight: bold;
}

.problemButtonUnsolved {
  width: 50px;
  height: 50px;
  margin: 10px;
  background-color: #0062ff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 160%;
  font-weight: bold;
}


.timeAttackButtonUnplayed{
    width: 100%;    
  padding: 12px 30px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 200%
}

.timeAttackButtonPlayed{
    width: 100%;    
  padding: 12px 30px;
  background-color: #7ae3ec;
  color: black;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 200%
}

.returnToTimeAttackSelectionButton {
    padding: 8px 16px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin: 8px;
    font-size: 75%
}

.returnToProblemSelectionButton {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 75%
}

.returnContainer {
    text-align: left;     /* 中央寄せ */
    margin-top: 10px;       /* 上に余白 */
}
  

.returnToTitleButton {
  left: 10%;
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 150%
}

/* .problemModeButton {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
} */

.problemModeButton {
    width: 400px;
    height: 80px;
    top: 30px;
    position: relative;
    display: inline-block;
    font-weight: bold;
    text-decoration: none;
    color: #FFF;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.73);
    padding: 0.3em 0.5em;
    background: #00bcd4;
    border-top: solid 3px #00a3d4;
    border-bottom: solid 3px #00a3d4; 
    font-size: 200%;
} 
.problemModeButton:hover {
    text-shadow: -6px 0px 15px rgba(255, 255, 240, 0.83),
                 6px 0px 15px rgba(255, 255, 240, 0.83);
}
.timeAttackModeButton {
    width: 400px;
    height: 80px;
    top: 30px;
    position: relative;
    display: inline-block;
    font-weight: bold;
    text-decoration: none;
    color: #FFF;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.73);
    padding: 0.3em 0.5em;
    background: #00bcd4;
    border-top: solid 3px #00a3d4;
    border-bottom: solid 3px #00a3d4; 
    font-size: 200%;
} 
.timeAttackModeButton:hover {
    text-shadow: -6px 0px 15px rgba(255, 255, 240, 0.83),
                 6px 0px 15px rgba(255, 255, 240, 0.83);
}

.undoButtonDisabled {
  padding: 8px 16px;
  background-color: #444444;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 150%
}

.undoButtonEnabled {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 150%
}

.retryButtonDisabled {
  padding: 8px 16px;
  background-color: #444444;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 150%
}

.retryButtonEnabled {
  padding: 8px 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 8px;
  font-size: 150%
}

.css-image {
    display: block;  
    margin: 0 auto;  
    margin-top: -20px;
    margin-bottom: -30px;

    /* position: relative;  
    left: 130px;    */
}

.css-image-problem { 
    display: block;  
    margin: 0 auto;  
    margin-top: -20px;
    margin-bottom: -30px;
}

.gameInfo{
  display: flex;
  flex-wrap:no-wrap;
}

.gameInfoLeft{
  width: 30%;
  text-align: center;
  font-size: 200%
}
.gameInfoRight{
  width: 70%;
}

.undoRetryButtonContainer{
  text-align: center;
}

.modeSelectionButton{
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  gap: 50px; 
  height: 20px;
}

  /* const tableStyle: React.CSSProperties = {
    borderCollapse: 'collapse',
    margin: '1rem 0',
    width: 'auto',
    fontSize: '0.9rem',
  };
  const thStyle: React.CSSProperties = {
    border: '1px solid #555',
    padding: '0.5rem',
    textAlign: 'center',
    backgroundColor: 'var(--card)',
  };
  const tdStyle: React.CSSProperties = {
    border: '1px solid #555',
    padding: '0.5rem',
    textAlign: 'center',
  }; */

.custom-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1rem;
  font-size: 0.9rem;
}

/* テーブルヘッダー（見出し行）に適用するスタイル */
.custom-table th {
  border: 1px solid var(--border); /* テーマに合わせた境界線 */
  padding: 0.75rem;
  background-color: var(--card); /* テーマに合わせた背景色 */
  font-weight: bold;
}

/* テーブルのデータセルに適用するスタイル */
.custom-table td {
  border: 1px solid var(--border);
  padding: 0.75rem;
}

.code-box {
  margin-top: 1.5rem;
  padding: 1rem;
  background-color: var(--cord); /* テーマに合わせたカード色 */
  border: 1px solid var(--border); /* テーマに合わせた境界線も追加すると、より見やすいです */
  border-radius: 8px;
}

.code-block {
  font-family: monospace;
  background-color: var(--card);
  padding: 0.2rem 0.4rem;
  border-radius: 4px;
  font-size: 1.1rem;
}


